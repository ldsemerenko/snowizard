// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Snowizard.proto

package com.smoketurner.snowizard.api.protos;

public final class SnowizardProtos {
  private SnowizardProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SnowizardResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:snowizard.SnowizardResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int64 id = 1 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getIdList();
    /**
     * <code>repeated int64 id = 1 [packed = true];</code>
     */
    int getIdCount();
    /**
     * <code>repeated int64 id = 1 [packed = true];</code>
     */
    long getId(int index);
  }
  /**
   * Protobuf type {@code snowizard.SnowizardResponse}
   */
  public static final class SnowizardResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:snowizard.SnowizardResponse)
      SnowizardResponseOrBuilder {
    // Use SnowizardResponse.newBuilder() to construct.
    private SnowizardResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SnowizardResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SnowizardResponse defaultInstance;
    public static SnowizardResponse getDefaultInstance() {
      return defaultInstance;
    }

    public SnowizardResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SnowizardResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                id_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              id_.add(input.readInt64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                id_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                id_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          id_ = java.util.Collections.unmodifiableList(id_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.smoketurner.snowizard.api.protos.SnowizardProtos.internal_static_snowizard_SnowizardResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.smoketurner.snowizard.api.protos.SnowizardProtos.internal_static_snowizard_SnowizardResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse.class, com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<SnowizardResponse> PARSER =
        new com.google.protobuf.AbstractParser<SnowizardResponse>() {
      public SnowizardResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SnowizardResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SnowizardResponse> getParserForType() {
      return PARSER;
    }

    public static final int ID_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> id_;
    /**
     * <code>repeated int64 id = 1 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getIdList() {
      return id_;
    }
    /**
     * <code>repeated int64 id = 1 [packed = true];</code>
     */
    public int getIdCount() {
      return id_.size();
    }
    /**
     * <code>repeated int64 id = 1 [packed = true];</code>
     */
    public long getId(int index) {
      return id_.get(index);
    }
    private int idMemoizedSerializedSize = -1;

    private void initFields() {
      id_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getIdList().size() > 0) {
        output.writeRawVarint32(10);
        output.writeRawVarint32(idMemoizedSerializedSize);
      }
      for (int i = 0; i < id_.size(); i++) {
        output.writeInt64NoTag(id_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < id_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(id_.get(i));
        }
        size += dataSize;
        if (!getIdList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        idMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code snowizard.SnowizardResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:snowizard.SnowizardResponse)
        com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.smoketurner.snowizard.api.protos.SnowizardProtos.internal_static_snowizard_SnowizardResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.smoketurner.snowizard.api.protos.SnowizardProtos.internal_static_snowizard_SnowizardResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse.class, com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse.Builder.class);
      }

      // Construct using com.ge.snowizard.api.protos.SnowizardProtos.SnowizardResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.smoketurner.snowizard.api.protos.SnowizardProtos.internal_static_snowizard_SnowizardResponse_descriptor;
      }

      public com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse getDefaultInstanceForType() {
        return com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse.getDefaultInstance();
      }

      public com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse build() {
        com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse buildPartial() {
        com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse result = new com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          id_ = java.util.Collections.unmodifiableList(id_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.id_ = id_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse) {
          return mergeFrom((com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse other) {
        if (other == com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse.getDefaultInstance()) return this;
        if (!other.id_.isEmpty()) {
          if (id_.isEmpty()) {
            id_ = other.id_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureIdIsMutable();
            id_.addAll(other.id_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.smoketurner.snowizard.api.protos.SnowizardProtos.SnowizardResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Long> id_ = java.util.Collections.emptyList();
      private void ensureIdIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          id_ = new java.util.ArrayList<java.lang.Long>(id_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int64 id = 1 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getIdList() {
        return java.util.Collections.unmodifiableList(id_);
      }
      /**
       * <code>repeated int64 id = 1 [packed = true];</code>
       */
      public int getIdCount() {
        return id_.size();
      }
      /**
       * <code>repeated int64 id = 1 [packed = true];</code>
       */
      public long getId(int index) {
        return id_.get(index);
      }
      /**
       * <code>repeated int64 id = 1 [packed = true];</code>
       */
      public Builder setId(
          int index, long value) {
        ensureIdIsMutable();
        id_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 id = 1 [packed = true];</code>
       */
      public Builder addId(long value) {
        ensureIdIsMutable();
        id_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 id = 1 [packed = true];</code>
       */
      public Builder addAllId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, id_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 id = 1 [packed = true];</code>
       */
      public Builder clearId() {
        id_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:snowizard.SnowizardResponse)
    }

    static {
      defaultInstance = new SnowizardResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:snowizard.SnowizardResponse)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_snowizard_SnowizardResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_snowizard_SnowizardResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017Snowizard.proto\022\tsnowizard\"#\n\021Snowizar" +
      "dResponse\022\016\n\002id\030\001 \003(\003B\002\020\001B0\n\033com.ge.snow" +
      "izard.api.protosB\017SnowizardProtosH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_snowizard_SnowizardResponse_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_snowizard_SnowizardResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_snowizard_SnowizardResponse_descriptor,
        new java.lang.String[] { "Id", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
